{"version":3,"sources":["firebase.js","Components/TodoInput.js","Components/TodoOutput.js","Components/Todo.js","Components/SignIn.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TodoInput","db","firestore","useState","enteredTodo","setEnteredTodo","className","onSubmit","e","preventDefault","collection","add","complete","then","type","placeholder","value","onChange","target","TodoOutput","allTodos","setAllTodos","selectedSort","setSelectedSort","handleDelete","todo","doc","id","delete","handleToggle","update","useEffect","unsubscribe","orderBy","onSnapshot","snapshot","newTodos","docs","map","data","sortedComplete","filter","item","sortedNotComplete","key","style","display","onClick","Todo","SignIn","ui","require","auth","AuthUI","start","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","uiShown","document","getElementById","signInFlow","signInSuccessUrl","App","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.af47b798.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDi8MT2c_MAfCsmJW5RcrCZ2iVLpS6Fv0E\",\r\n  authDomain: \"final-todo-c8402.firebaseapp.com\",\r\n  databaseURL: \"https://final-todo-c8402.firebaseio.com\",\r\n  projectId: \"final-todo-c8402\",\r\n  storageBucket: \"final-todo-c8402.appspot.com\",\r\n  messagingSenderId: \"737002817299\",\r\n  appId: \"1:737002817299:web:96b3c8413e9fe7ec70fce6\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import React, { useState } from 'react'\r\nimport firebase from '../firebase'\r\nimport 'firebase/firestore'\r\n\r\n\r\nfunction TodoInput() {\r\n  const db = firebase.firestore()\r\n  const complete = false\r\n  const [enteredTodo, setEnteredTodo] = useState('')\r\n\r\n  function onChange(e) {\r\n    setEnteredTodo(e.target.value)\r\n  }\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault()\r\n    if (enteredTodo !== '') {\r\n      db.collection('todoList').add({\r\n        enteredTodo,\r\n        complete\r\n      }).then(() => {\r\n        setEnteredTodo('')\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='inputDiv'>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter todo item'\r\n          value={enteredTodo}\r\n          onChange={onChange} />\r\n        <button className='myButton'>Enter</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoInput","import React, { useState, useEffect } from 'react'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst TodoOutput = () => {\r\n  const db = firebase.firestore()\r\n  const [allTodos, setAllTodos] = useState([])\r\n  const [selectedSort, setSelectedSort] = useState('Not Completed')\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection('todoList').orderBy('enteredTodo', 'asc').onSnapshot((snapshot) => {\r\n      const newTodos = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }))\r\n      setAllTodos(newTodos)\r\n    })\r\n    return () => unsubscribe()\r\n  }, [db])\r\n\r\n  function handleDelete(todo) {\r\n    db.collection('todoList').doc(todo.id).delete()\r\n  }\r\n\r\n  function handleToggle(todo) {\r\n    db.collection(\"todoList\").doc(todo.id).update({\r\n      complete: !todo.complete\r\n    })\r\n  }\r\n\r\n  const sortedComplete = allTodos.filter(function (item) {\r\n    if (item.complete === true) {\r\n      return item\r\n    } return null\r\n  })\r\n\r\n  const sortedNotComplete = allTodos.filter(function (item) {\r\n    if (item.complete === false) {\r\n      return item\r\n    } return null\r\n  })\r\n\r\n  return (\r\n    <div className='outputDiv'>\r\n      <div>\r\n        <label>Sort Todo's by:</label>\r\n        <select value={selectedSort} onChange={e => setSelectedSort(e.target.value)} className='select-css'>\r\n          <option>Completed</option>\r\n          <option>Not Completed</option>\r\n        </select>\r\n      </div>\r\n      <ul>\r\n        {sortedNotComplete.map((todo) =>\r\n          <li key={todo.id} style={{ display: selectedSort === 'Completed' ? 'none' : null }}>\r\n            {selectedSort === 'Not Completed' ? todo.enteredTodo : null}\r\n            <button onClick={() => handleDelete(todo)} className='outputButton'>Delete</button>\r\n            <button onClick={() => handleToggle(todo)} className='outputButton'>Complete</button>\r\n          </li>)}\r\n      </ul>\r\n      <ul>\r\n        {sortedComplete.map((todo) =>\r\n          <li key={todo.id} style={{ display: selectedSort === 'Not Completed' ? 'none' : null }}>\r\n            {selectedSort === 'Completed' ? todo.enteredTodo : null}\r\n            <button onClick={() => handleDelete(todo)} className='outputButton'>Delete</button>\r\n            <button onClick={() => handleToggle(todo)} className='outputButton'>Do again</button>\r\n          </li>)}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoOutput","import React from 'react'\r\nimport TodoInput from '../Components/TodoInput'\r\nimport TodoOutput from '../Components/TodoOutput'\r\n\r\nfunction Todo() {\r\n  return (\r\n    <div>\r\n      <TodoInput />\r\n      <TodoOutput />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\n\r\n\r\nfunction SignIn() {\r\n\r\n  let firebaseui = require('firebaseui');\r\n  let ui = new firebaseui.auth.AuthUI(firebase.auth());  \r\n\r\n  ui.start('#firebaseui-auth-container', {\r\n    signInOptions: [\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n    ]\r\n  });\r\n\r\n  let uiConfig = {\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: function (authResult, redirectUrl) {\r\n        return true;\r\n      },\r\n      uiShown: function () {\r\n        document.getElementById('loader').style.display = 'none';\r\n      }\r\n    },\r\n    signInFlow: 'popup',\r\n    signInSuccessUrl: 'http://saulius-b.github.io/React-crud-deployed/todo',\r\n    signInOptions: [\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n    ]\r\n  };\r\n\r\n  ui.start('#firebaseui-auth-container', uiConfig);  \r\n\r\n  return (\r\n    <div>\r\n      <h4>Please sign or create a new account with email to access the app</h4>\r\n      <div id=\"firebaseui-auth-container\"></div>\r\n      <div id=\"loader\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn","import React from 'react';\nimport { HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Todo from '../src/Components/Todo'\nimport SignIn from '../src/Components/SignIn'\n\nfunction App() {\n  return (\n    <Router>\n      <div className='mainDiv'>\n        <h3>Todo app</h3>\n        <Switch>\n          <Route path='/todo'>\n            <Todo />\n          </Route>\n          <Route path='/'>\n            <SignIn />\n          </Route>\n        </Switch>\n      </div>\n      <div className='footer'>\n        Created by Saulius Balčiūnas\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}